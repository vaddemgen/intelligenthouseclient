import com.github.spotbugs.snom.SpotBugsTask

plugins {
  id 'java'
  id 'com.github.spotbugs' version '6.0.12'
  id 'com.github.johnrengelman.shadow' version '8.1.1'
  id 'pmd'
  id 'org.springframework.boot' version '3.2.5'
  id 'io.spring.dependency-management' version '1.1.4'
}

apply from: rootProject.file('gradle/checkstyle.gradle')
apply from: rootProject.file('gradle/spotbugs-all-task.gradle')
apply from: rootProject.file('gradle/install-git-hooks.gradle')

group 'com.vaddemgen'
version '1.0.0-alpha.5'

sourceCompatibility = 17

ext {
  // https://mvnrepository.com/artifact/com.pi4j/pi4j-core
  pi4jVersion = '1+'
  // https://mvnrepository.com/artifact/org.projectlombok/lombok
  lombokVersion = '1+'
  // https://mvnrepository.com/artifact/com.google.code.gson/gson
  gsonVersion = '2+'
  // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
  apacheCommonsLang3Version = '3+'
  // https://mvnrepository.com/artifact/org.spockframework/spock-bom
  spockBomVersion = '2.0-M2-groovy-3.0'
  // https://mvnrepository.com/artifact/org.codehaus.groovy/groovy-bom
  groovyBomVersion = '3.0.2'
}

/* SpotBugs */
tasks.withType(SpotBugsTask) {
  reports {
    html.enabled true
  }
}
spotbugs {
  excludeFilter.set(file('config/findbugs/excludeFilter.xml'))
}
/* ./SpotBugs */

/* PMD */
pmd {
  consoleOutput = true
  toolVersion = "6.21.0"
}
/* ./PMD */

jar {
  manifest {
    attributes(
        'Main-Class': 'com.vaddemgen.intelligenthouseclient.Application'
    )
  }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation platform(project(':platform'))

  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.kafka:spring-kafka'

  implementation "com.pi4j:pi4j-core:$pi4jVersion"
  implementation "com.google.code.gson:gson:$gsonVersion"
  implementation "org.apache.commons:commons-lang3:$apacheCommonsLang3Version"

  // https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients
  implementation 'org.apache.kafka:kafka-clients:3.3.1'

  // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
  implementation 'org.xerial:sqlite-jdbc:3.45.3.0'
  // https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-community-dialects
  implementation 'org.hibernate.orm:hibernate-community-dialects:6.5.0.Final'

  testImplementation 'org.junit.jupiter:junit-jupiter-params'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
  testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'

  annotationProcessor "org.projectlombok:lombok:$lombokVersion"

  // Spock
  testImplementation platform("org.spockframework:spock-bom:$spockBomVersion")
  testImplementation 'org.spockframework:spock-core'

  testImplementation platform("org.codehaus.groovy:groovy-bom:$groovyBomVersion")

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.kafka:spring-kafka-test'
}

tasks.named('test') {
  useJUnitPlatform()
}